// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  clerkId   String   @unique // External ID from Clerk
  email     String   @unique
  name      String?
  role      UserRole @default(USER)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  jobs      Job[]    // Jobs posted by the user
}

model Agent {
  id           String    @id @default(cuid())
  name         String
  description  String
  endpointURL  String    // API endpoint for the agent
  inputSchema  Json      // JSON schema for agent input
  outputSchema Json      // JSON schema for agent output
  keywords     String    // Comma-separated keywords
  isActive     Boolean   @default(true)
  safeAddress  String?   // Safe wallet address
  safeTxHash   String?   // Transaction hash of Safe creation
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  jobs         Job[]     // Jobs assigned to this agent
  jobLogs      JobLog[]  // Logs of jobs processed by this agent
}

model Job {
  id                String    @id @default(cuid())
  name             String    // Changed from title to match PRD
  description      String
  acceptanceCriteria String  // Added as per PRD
  status           JobStatus @default(PENDING)
  result           Json?     // Renamed from output to match PRD
  createdByUserId  String    // Renamed from userId to match PRD
  assignedAgentId  String?   // Renamed from agentId to match PRD
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  user             User      @relation(fields: [createdByUserId], references: [id])
  agent            Agent?    @relation(fields: [assignedAgentId], references: [id])
  logs             JobLog[]
}

enum JobStatus {
  PENDING
  ASSIGNED
  IN_PROGRESS
  COMPLETED
  FAILED
  REJECTED
  RESUBMISSION_REQUIRED  // Added as per PRD
}

enum UserRole {
  USER
  ADMIN
  AGENT
}

enum JobLogStatus {
  PENDING
  ASSIGNED
  IN_PROGRESS
  COMPLETED
  FAILED
  REJECTED
  RESUBMISSION_REQUIRED
  CANCELLED
  MATCHING_FAILED
}

model JobLog {
  id              String       @id @default(cuid())
  jobId           String
  agentId         String?
  requestPayload  Json?
  responsePayload Json?
  status          JobLogStatus
  message         String?
  createdAt       DateTime     @default(now())
  job             Job          @relation(fields: [jobId], references: [id])
  agent           Agent?       @relation(fields: [agentId], references: [id])
}
